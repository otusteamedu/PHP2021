-- Таблица фильмов
CREATE TABLE public.cinema_movies
(
    id            int4        NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name_original varchar(50) NOT NULL,
    name_loc      varchar(50) NULL,
    duration_min  int2        NOT NULL,
    CONSTRAINT cinema_movies_pk PRIMARY KEY (id)
);

-- Таблица билетов (status 0 - Доступен, 1 - Продан)
CREATE TABLE public.cinema_tickets
(
    id         int8           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    session_id int8           NOT NULL,
    seat_id    int4           NOT NULL,
    price      numeric(10, 2) NOT NULL,
    status     int2           NOT NULL DEFAULT 0,
    CONSTRAINT cinema_tickets_pk PRIMARY KEY (id),
    CONSTRAINT cinema_tickets_un UNIQUE (session_id, seat_id),
    CONSTRAINT cinema_tickets_seats_fk FOREIGN KEY (seat_id) REFERENCES cinema_seats (id),
    CONSTRAINT cinema_tickets_sessions_fk FOREIGN KEY (session_id) REFERENCES cinema_sessions (id)
);

-- Таблица мест в кинотеатре
CREATE TABLE public.cinema_seats
(
    id        int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    screen_id int2 NOT NULL,
    "row"     int2 NOT NULL,
    place     int2 NOT NULL,
    CONSTRAINT cinema_seats_pk PRIMARY KEY (id),
    CONSTRAINT cinema_seats_un UNIQUE (screen_id, "row", place),
    CONSTRAINT cinema_seats_screens_fk FOREIGN KEY (screen_id) REFERENCES cinema_screens (id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- Таблица кинозалов
CREATE TABLE public.cinema_screens
(
    id        int2        NOT NULL,
    "name"    varchar(50) NOT NULL,
    max_seats int2        NOT NULL,
    CONSTRAINT cinema_screens_pk PRIMARY KEY (id)
);

-- Таблица киносеансов
CREATE TABLE public.cinema_sessions
(
    id            int8         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    movie_id      int4         NOT NULL,
    screen_id     int2         NOT NULL,
    session_start timestamp(0) NOT NULL,
    CONSTRAINT cinema_sessions_pk PRIMARY KEY (id),
    CONSTRAINT cinema_sessions_un UNIQUE (screen_id, session_start),
    CONSTRAINT cinema_sessions_movies_fk FOREIGN KEY (movie_id) REFERENCES cinema_movies (id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT cinema_sessions_screens_fk FOREIGN KEY (screen_id) REFERENCES cinema_screens (id) ON UPDATE CASCADE ON DELETE CASCADE
);
