version: '3'

services:
  balancer:
    build:
      context: nginx/balancer
      dockerfile: Dockerfile
    image: myapp/balancer-nginx
    container_name: web-balancer
    ports:
      - 80:80
      - 443:443
    depends_on:
      - server1
      - server2
    networks:
      - app-network

  server1:
    build:
      context: nginx/server
      dockerfile: Dockerfile
    image: myapp/server-nginx
    container_name: server1
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
    ports:
    - 8082:80

  server2:
    build:
      context: nginx/server
      dockerfile: Dockerfile
    image: myapp/server-nginx
    container_name: server2
    volumes:
      - ./code:/data/mysite.local
    networks:
      - app-network
    ports:
      - 8081:80

  app1:
    build:
      context: fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app1
    volumes:
       - ./code:/data/mysite.local
    networks:
      - app-network

  app2:
    build:
      context: fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app2
    volumes:
       - ./code:/data/mysite.local
    networks:
      - app-network

  db:
    image: mysql:5.7.22
    container_name: db
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./dbdata:/var/lib/mysql  
    networks:
      - app-network

  memcached:
    image: memcached
    container_name: memcache
    ports:
      - 11212:11211
    networks:
      - app-network

networks:
  app-network:
    driver: bridge