version: '3.5'

volumes:
  phpsocket:
  elasticsearch:

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  balancer:
    build:
      context: ./nginx
    depends_on:
      - php1
      - php2
    ports:
      - '8094:80'
    volumes:
      - ./www:/var/www/
      - ./conf/balancer:/etc/nginx/conf.d
      - ./nginx/filebeat.yml:/etc/filebeat/filebeat.yml
    environment:
      - NGINX_PORT=80
  nginx1:
    build:
      context: ./nginx
    depends_on:
      - php1
    volumes:
      - ./www:/var/www/
      - ./conf/nginx1:/etc/nginx/conf.d
  nginx2:
    build:
      context: ./nginx
    depends_on:
      - php2
    volumes:
      - ./www:/var/www/
      - ./conf/nginx2:/etc/nginx/conf.d
  php1:
    build:
      context: ./php-fpm
    restart: always
    volumes:
      - ./www:/var/www/
  php2:
    build:
      context: ./php-fpm
    restart: always
    volumes:
      - ./www:/var/www/
  workspace:
    build:
      context: ./workspace
    volumes:
      - ./www:/var/www/
  memcached:
    image: memcached
  mysql:
    image: mysql
    volumes:
      - ./db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - '3307:3306'



