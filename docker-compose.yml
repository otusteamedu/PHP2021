version: '3'

services:

  balancer:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx-balancer
    container_name: balancer
    ports:
      - "80:80"
      - "443:443"
    volumes:
       - ./code:/data/app.local
       - ./nginx/hosts/balancer.conf:/etc/nginx/sites-enabled/balancer.conf
    networks:
      - app-network

  webserver1:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver1
    volumes:
       - ./code:/data/app.local
       - ./nginx/hosts/app.local.conf:/etc/nginx/sites-enabled/app.local.conf
    networks:
      - app-network

  webserver2:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: myapp/nginx
    container_name: webserver2
    volumes:
       - ./code:/data/app.local
       - ./nginx/hosts/app.local.conf:/etc/nginx/sites-enabled/app.local.conf
    networks:
      - app-network

  app1:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app1
    volumes:
       - ./code:/data/app.local
    networks:
      - app-network

  app2:
    build:
      context: ./fpm
      dockerfile: Dockerfile
    image: myapp/php
    container_name: app2
    volumes:
       - ./code:/data/app.local
    networks:
      - app-network

  memcache:
    image: memcached:alpine
    container_name: memcache
    ports:
      - "11211:11211"
    networks:
      - app-network

  db:
    image: mysql:5.7.22
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./dbdata:/var/lib/mysql  
    networks:
      - app-network

networks:
  app-network:
    driver: bridge