version: '3'

services:
  nginx-balancer:
    build:
      context: ./nginx-balancer
      dockerfile: Dockerfile
    container_name: nginx-balancer
    image: localapp/nginx-balancer
    ports:
      - "80:80"
      - "443:443"
    depends_on:
       - nginx-webserver1
       - nginx-webserver2
    networks:
      - app-network

  nginx-webserver1:
    build:
      context: ./nginx-webserver
      dockerfile: Dockerfile
    container_name: nginx-webserver1
    image: localapp/nginx-webserver
    ports:
      - "8081:80"
    volumes:
       - ./code:/var/www/otus.local
    networks:
      - app-network

  nginx-webserver2:
    build:
      context: ./nginx-webserver
      dockerfile: Dockerfile
    container_name: nginx-webserver2
    image: localapp/nginx-webserver
    ports:
      - "8082:80"
    volumes:
       - ./code:/var/www/otus.local
    networks:
      - app-network

  php1:
    build:
      context: ./php-fpm
      dockerfile: Dockerfile
    image: localapp/php
    container_name: php1
    volumes:
       - ./code:/var/www/otus.local
    networks:
      - app-network

  php2:
    build:
      context: ./php-fpm
      dockerfile: Dockerfile
    image: localapp/php
    container_name: php2
    volumes:
       - ./code:/var/www/otus.local
    networks:
      - app-network

  elastic_search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3
    container_name: elastic_search
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"
    networks:
      - app-network

  kibana:
      image: docker.elastic.co/kibana/kibana:7.16.3
      container_name: kibana
      ports:
        - "5601:5601"
      environment:
        - "ELASTICSEARCH_HOSTS=http://elastic_search:9200"
      networks:
        - app-network
      depends_on:
        - elastic_search

networks:
  app-network:
    driver: bridge
